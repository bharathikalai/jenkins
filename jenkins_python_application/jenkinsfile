pipeline{
    agent any
    stages {
        stage ('Git-Checkout') {
            steps{
                git branch: 'main', url: 'https://github.com/bharathikalai/jenkins'
            }
        }
        stage('Docker-Build') {
            steps {
                withDockerRegistry(credentialsId: 'your_docker_env', url: 'https://index.docker.io/v1/') {
                   sh "docker build -t pythonapp:latest -f jenkins_python_application/dockerfile ."
                   sh "docker tag pythonapp your_docker_hub_name/pythonapp:latest"
                   sh "docker push your_docker_hub_name/pythonapp:latest"
                }
            }    
        }
        stage('Docker-Run') {
            steps {
                withDockerRegistry(credentialsId: 'your_docker_env', url: 'https://index.docker.io/v1/') {
                   sh "sudo docker run -d -p 8077:8066 pythonapp:latest"
                }
            }    
        }
        stage('Sonarqube') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                    $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Devops-CICD \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=Devops-CICD
                    '''
                }
            }
        }
    }
}